@use "variables" as *;
@use "functions" as *;

// Responsive breakpoint mixins
@mixin mobile {
	@media (max-width: #{breakpoint(mobile) - 1px}) {
		@content;
	}
}

@mixin tablet {
	@media (min-width: #{breakpoint(mobile)}) and (max-width: #{breakpoint(tablet) - 1px}) {
		@content;
	}
}

@mixin desktop {
	@media (min-width: #{breakpoint(tablet)}) {
		@content;
	}
}

@mixin mobile-only {
	@media (max-width: #{breakpoint(mobile) - 1px}) {
		@content;
	}
}

@mixin tablet-up {
	@media (min-width: #{breakpoint(mobile)}) {
		@content;
	}
}

@mixin desktop-up {
	@media (min-width: #{breakpoint(tablet)}) {
		@content;
	}
}

// Touch-friendly sizing
@mixin touch-target($min-size: 44px) {
	min-height: $min-size;
	min-width: $min-size;
}

// Button base styles
@mixin button-base {
	@include touch-target;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	padding: space(md) space(xl);
	font-size: font-size(base);
	font-weight: font-weight(medium);
	border: none;
	border-radius: radius(base);
	cursor: pointer;
	transition: transition(base);
	text-decoration: none;
	outline: none;
	user-select: none;

	&:disabled {
		opacity: 0.5;
		cursor: not-allowed;
	}
}

// Button variants
@mixin button-primary {
	background-color: color(primary);
	color: white;

	&:hover:not(:disabled) {
		background-color: color(primary-hover);
	}

	&:focus-visible {
		box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
	}
}

@mixin button-secondary {
	background-color: color(surface);
	color: color(text-primary);
	border: 1px solid color(border);

	&:hover:not(:disabled) {
		background-color: color(border);
	}

	&:focus-visible {
		box-shadow: 0 0 0 3px rgba(100, 116, 139, 0.5);
	}
}

// Card styles
@mixin card {
	background: color(background);
	border: 1px solid color(border);
	border-radius: radius(base);
	padding: space(2xl);
	box-shadow: shadow(base);
}

@mixin card-mobile {
	@include mobile {
		padding: 0;
		border: none;
		border-radius: 0;
		box-shadow: none;
		background: transparent;
	}
}

// Form input styles
@mixin input-base {
	padding: space(md);
	border: 1px solid color(border);
	border-radius: radius(base);
	font-size: font-size(base);
	transition: transition(base);
	background-color: color(background);
	color: color(text-primary);

	&:focus {
		outline: none;
		border-color: color(border-focus);
		box-shadow: 0 0 0 1px color(border-focus);
	}

	&::placeholder {
		color: color(text-secondary);
	}
}

// Flex utilities
@mixin flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

@mixin flex-between {
	display: flex;
	align-items: center;
	justify-content: space-between;
}

@mixin flex-column {
	display: flex;
	flex-direction: column;
}

// Grid utilities
@mixin grid($columns: 1, $gap: space(lg)) {
	display: grid;
	grid-template-columns: repeat($columns, 1fr);
	gap: $gap;
}

@mixin responsive-grid($mobile: 1, $tablet: 2, $desktop: 3, $gap: space(lg)) {
	@include grid($mobile, $gap);

	@include tablet-up {
		grid-template-columns: repeat($tablet, 1fr);
	}

	@include desktop-up {
		grid-template-columns: repeat($desktop, 1fr);
	}
}

// Visual state mixins
@mixin hover-lift {
	transition: transform transition(base), box-shadow transition(base);

	&:hover {
		transform: translateY(-2px);
		box-shadow: shadow(md);
	}
}

@mixin focus-ring($color: color(primary)) {
	&:focus-visible {
		outline: none;
		box-shadow: 0 0 0 3px
			rgb(#{red($color)} #{green($color)} #{blue($color)} / 0.5);
	}
}

// Text utilities
@mixin text-truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin text-clamp($lines: 3) {
	display: -webkit-box;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: $lines;
	overflow: hidden;
}

// Screen reader only (for accessibility)
@mixin sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}

// Position utilities
@mixin absolute-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin fixed-center {
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
